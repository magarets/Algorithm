1. 일반적인 나눗셈을 그냥 하기싫어서 조금더 알고리즘을 추가했다.
2. 이 알고리즘을 사용한다면 c 에서 일반적인 나눗셈을 했을 때 나올 수 있는 15번째 자리수 그 이상까지 소수점을 구할 수 있다. (아마 int형의 최댓값인 6만자리까지 구할 수 있다..)

우선 a 와 b 를 'a / b' 라고 가정한다.

이때 a > b인경우 값은 1이상의 값이 나올것이고
a < b인경우 값은 1 미만의 값이 나올것이다.

우선 이부분에서 한번의 분기가 필요하다.

그리고 나선 소숫점을 구하는 로직인데 단순하다.

일반적인 우리가 하는 나눗셈을 생각해보자.

3 / 7를 할 때 어떻게 하는지를 생각해보면 이해하기 쉽다.
우선 a < b의 형태이기에 값은 1 미만일것을 염두해두자.

그리고나선 실질적인 계산을 하는법은 일반적인 계산법으로는 3을 7로 나누었을 때 몫이 나오질 않는다.

그렇기에 3에 10을 곱해준 뒤, 7를나눠서 몫과 나머지를 찾는다.

이때 몫은 2, 나머지는 1이다.

그리고나선 나머지에 다시 10을 곱해서 7로 나눈뒤 몫과 나머지를 구하는 방법을 반복한다.

여기서 몫이 바로 이전에구한 소숫점바로뒤에붙을 소숫점이 되는것이고,

나머지가 계속 몫을구할 피연산자가 되는것이다.

결국 나머지가 0이나올때까지 계속 루프를 돌린다.

이 알고리즘을 쓴다면 소숫점 이하 6만자리까지 구할 수 있다.
